user  nginx;
worker_processes  1;
daemon off;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
  	accept_mutex off; # "on" if nginx worker_processes > 1
  	use epoll; # enable for Linux 2.6+
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

  	tcp_nopush on; # off may be better for *some* Comet/long-poll stuff
  	tcp_nodelay off; # on may be better for some Comet/long-poll stuff

	gzip on;
	gzip_http_version 1.0;
	gzip_proxied any;
	gzip_min_length 500;
	gzip_disable "MSIE [1-6]\.";
	gzip_types text/plain text/html text/xml text/css
	           text/comma-separated-values
	           text/javascript application/x-javascript
	           application/atom+xml;

	server {
	  listen 80 default deferred; # for Linux

	  # If you have IPv6, you'll likely want to have two separate listeners.
	  # One on IPv4 only (the default), and another on IPv6 only instead
	  # of a single dual-stack listener.  A dual-stack listener will make
	  # for ugly IPv4 addresses in $remote_addr (e.g ":ffff:10.0.0.1"
	  # instead of just "10.0.0.1") and potentially trigger bugs in
	  # some software.
	  # listen [::]:80 ipv6only=on; # deferred or accept_filter recommended

	  client_max_body_size 4G;
	  server_name _;

	  # ~2 seconds is often enough for most folks to parse HTML/CSS and
	  # retrieve needed images/icons/frames, connections are cheap in
	  # nginx so increasing this is generally safe...
	  keepalive_timeout 5;

	  # path for static files
	  root /usr/share/nginx/html;

	  # Prefer to serve static files directly from nginx to avoid unnecessary
	  # data copies from the application server.
	  #
	  # try_files directive appeared in in nginx 0.7.27 and has stabilized
	  # over time.  Older versions of nginx (e.g. 0.6.x) requires
	  # "if (!-f $request_filename)" which was less efficient:
	  # http://bogomips.org/unicorn.git/tree/examples/nginx.conf?id=v3.3.1#n127
	  try_files $uri/index.html $uri.html $uri;
	}
}
